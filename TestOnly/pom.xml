<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>net.snowflake</groupId>
  <artifactId>snowflake-jdbc-test</artifactId>
  <version>3.13.21</version>

  <name>snowflake-jdbc-test</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <arrow.version>17.0.0</arrow.version>
    <awaitility.version>4.2.0</awaitility.version>
    <jacksondatabind.version>2.17.2</jacksondatabind.version>
    <jacoco.version>0.8.4</jacoco.version>
    <jacoco.skip.instrument>true</jacoco.skip.instrument>
    <jna.version>5.13.0</jna.version>
    <junit.version>5.11.1</junit.version>
    <surefire.version>3.5.1</surefire.version>
    <mockito.version>3.5.6</mockito.version>
    <shadeBase>net.snowflake.client.jdbc.internal</shadeBase>
  </properties>

  <dependencies>
    <dependency> <!-- netty is not a direct dependency. It is used by arrow-vector -->
      <groupId>io.netty</groupId>
      <artifactId>netty-common</artifactId>
      <version>4.1.115.Final</version>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-buffer</artifactId>
      <version>4.1.115.Final</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-failsafe-plugin</artifactId>
      <version>3.0.0-M1</version>

      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-suite</artifactId>
      <version>1.11.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-engine</artifactId>
      <version>1.11.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-runner</artifactId>
      <version>1.11.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-suite-api</artifactId>
      <version>1.11.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-suite-engine</artifactId>
      <version>1.11.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-launcher</artifactId>
      <version>1.11.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest</artifactId>
      <version>2.1</version>
      <type>jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-inline</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <version>${awaitility.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
      <version>1.4</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.mchange</groupId>
      <artifactId>c3p0</artifactId>
      <version>0.9.5.4</version>
      <type>jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.snowflake</groupId>
      <artifactId>snowflake-jdbc</artifactId>
      <version>${project.version}</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>net.snowflake</groupId>
      <artifactId>snowflake-common</artifactId>
      <version>4.0.1</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <version>1.2</version>
      <type>jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.10</version>
      <type>jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-text</artifactId>
      <version>1.10.0</version>
      <type>jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.2</version>
      <type>jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.mojo</groupId>
      <artifactId>exec-maven-plugin</artifactId>
      <version>1.2.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-compress</artifactId>
      <version>1.21</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>net.minidev</groupId>
      <artifactId>json-smart-mini</artifactId>
      <version>1.0.6.3</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jacksondatabind.version}</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>org.apache.arrow</groupId>
      <artifactId>arrow-vector</artifactId>
      <version>${arrow.version}</version>
      <exclusions>
        <exclusion> <!-- Exclude earlier version to avoid whitesource vulnerability. -->
          <groupId>io.netty</groupId>
          <artifactId>netty-common</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.netty</groupId>
          <artifactId>netty-buffer</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.arrow</groupId>
      <artifactId>arrow-memory-unsafe</artifactId>
      <version>${arrow.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.arrow</groupId>
      <artifactId>arrow-memory-netty-buffer-patch</artifactId>
      <version>${arrow.version}</version>
      <exclusions>
        <exclusion> <!-- Exclude earlier version to avoid whitesource vulnerability. -->
          <groupId>io.netty</groupId>
          <artifactId>netty-common</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.netty</groupId>
          <artifactId>netty-buffer</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP</artifactId>
      <version>2.4.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
       <groupId>com.google.guava</groupId>
       <artifactId>guava</artifactId>
       <version>32.0.0-jre</version>
    </dependency>
    <!-- http://mvnrepository.com/artifact/net.java.dev.jna/jna -->
    <dependency>
      <groupId>net.java.dev.jna</groupId>
      <artifactId>jna</artifactId>
      <version>${jna.version}</version>
    </dependency>
    <!-- http://mvnrepository.com/artifact/net.java.dev.jna/jna-platform -->
    <dependency>
      <groupId>net.java.dev.jna</groupId>
      <artifactId>jna-platform</artifactId>
      <version>${jna.version}</version>
    </dependency>
  </dependencies>

  <build>
    <sourceDirectory>${basedir}/../src/main/java</sourceDirectory>
    <testSourceDirectory>${basedir}/../src/test/java</testSourceDirectory>
    <resources>
      <resource>
        <directory>${basedir}/../src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>${basedir}/../src/test/resources</directory>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.0.0</version>
        <configuration>
          <excludeDefaultDirectories/>
          <filesets>
            <fileset>
              <directory>lib</directory>
                <includes>
                  <include>*.jar</include>
                </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <version>3.0.0-M1</version>
        <executions>
          <execution>
            <id>install-arrow-memory</id>
            <phase>validate</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <file>${project.basedir}/../dependencies/arrow-memory-${arrow.version}.pom</file>
              <groupId>org.apache.arrow</groupId>
              <artifactId>arrow-memory</artifactId>
              <version>${arrow.version}</version>
              <packaging>pom</packaging>
              <generatePom>true</generatePom>
            </configuration>
          </execution>
          <execution>
            <id>install-arrow-memory-core</id>
            <phase>validate</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <file>${project.basedir}/../dependencies/arrow-memory-core-${arrow.version}.jar</file>
              <groupId>org.apache.arrow</groupId>
              <artifactId>arrow-memory-core</artifactId>
              <version>${arrow.version}</version>
              <packaging>jar</packaging>
              <generatePom>true</generatePom>
            </configuration>
          </execution>
          <execution>
            <id>install-arrow-memory-unsafe</id>
            <phase>validate</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <file>${project.basedir}/../dependencies/arrow-memory-unsafe-${arrow.version}.jar</file>
              <groupId>org.apache.arrow</groupId>
              <artifactId>arrow-memory-unsafe</artifactId>
              <version>${arrow.version}</version>
              <packaging>jar</packaging>
              <generatePom>true</generatePom>
            </configuration>
          </execution>
          <execution>
            <id>install-arrow-memory-netty-buffer-patch</id>
            <phase>validate</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <file>${project.basedir}/../dependencies/arrow-memory-netty-buffer-patch-${arrow.version}.jar</file>
              <groupId>org.apache.arrow</groupId>
              <artifactId>arrow-memory-netty</artifactId>
              <version>${arrow.version}</version>
              <packaging>jar</packaging>
              <generatePom>true</generatePom>
            </configuration>
          </execution>
          <execution>
            <id>install-arrow-format</id>
            <phase>validate</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <file>${project.basedir}/../dependencies/arrow-format-${arrow.version}.jar</file>
              <groupId>org.apache.arrow</groupId>
              <artifactId>arrow-format</artifactId>
              <version>${arrow.version}</version>
              <packaging>jar</packaging>
              <generatePom>true</generatePom>
            </configuration>
          </execution>
          <execution>
            <id>install-arrow-vector</id>
            <phase>validate</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <file>${project.basedir}/../dependencies/arrow-vector-${arrow.version}.jar</file>
              <groupId>org.apache.arrow</groupId>
              <artifactId>arrow-vector</artifactId>
              <version>${arrow.version}</version>
              <packaging>jar</packaging>
              <generatePom>true</generatePom>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.0</version>
        <configuration>
          <skipMain>true</skipMain>
          <source>8</source>
          <target>8</target>
          <testExcludes>
            <!-- arrow tests -->
            <exclude>**/net/snowflake/client/core/arrow/*.java</exclude>
            <exclude>**/ResultSetArrow*.java</exclude>
            <exclude>**/PreparedStatementArrow*IT.java</exclude>
            <exclude>**/SFArrowResultSetIT.java</exclude>
            <!-- structured types tests -->
            <exclude>**/structuredtypes/sqldata/*.java</exclude>
            <!-- Latest JDBC driver tests that cannot run with the oldest driver -->
            <exclude>**/*LatestIT.java</exclude>
            <!-- Unit Tests -->
            <exclude>**/*Test.java</exclude>
            <!-- Manual Tests -->
            <exclude>**/*Manual.java</exclude>
            <!-- Telemetry API is new -->
            <exclude>**/TelemetryServiceIT.java</exclude>
            <exclude>**/TelemetryIT.java</exclude>
            <!-- OCSP implementation is new -->
            <exclude>**/SFTrustManagerIT.java</exclude>
            <!-- Logger improvement is new -->
            <exclude>**/SLF4JLoggerIT.java</exclude>
            <!-- Async support is new -->
            <exclude>**/ResultSetAsyncIT.java</exclude>
            <!-- ResultSet serialization is new -->
            <exclude>**/SnowflakeResultSetSerializable*IT.java</exclude>
          </testExcludes>
          <useIncrementalCompilation>false</useIncrementalCompilation>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.surefire</groupId>
            <artifactId>surefire-junit-platform</artifactId>
            <version>${surefire.version}</version>
          </dependency>
        </dependencies>
        <version>${surefire.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.surefire</groupId>
            <artifactId>surefire-junit-platform</artifactId>
            <version>${surefire.version}</version>
          </dependency>
        </dependencies>
        <version>${surefire.version}</version>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>jenkinsIT</id>
      <activation>
        <property>
          <name>jenkinsIT</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <failIfNoTests>false</failIfNoTests>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>test</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>verify</goal>
                </goals>
              </execution>
              <execution>
                <id>DefaultIT</id>
                <goals>
                  <goal>integration-test</goal>
                </goals>
                <configuration>
                  <systemPropertyVariables>
                    <net.snowflake.jdbc.loggerImpl>net.snowflake.client.log.JDK14Logger</net.snowflake.jdbc.loggerImpl>
                    <java.util.logging.config.file>${basedir}/src/test/resources/logging.properties</java.util.logging.config.file>
                  </systemPropertyVariables>
                  <test>${integrationTestSuites}</test>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- collect code coverage -->
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco.version}</version>
            <executions>
              <execution>
                <id>pre-integration-test</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <configuration>
                  <destFile>target/jacoco-it.exec</destFile>
                </configuration>
              </execution>
              <execution>
                <id>post-integration-test</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>report</goal>
                </goals>
                <configuration>
                  <dataFile>target/jacoco-it.exec</dataFile>
                  <outputDirectory>target/jacoco-it</outputDirectory>
                </configuration>
              </execution>
            </executions>
            <configuration>
              <skip>${jacoco.skip.instrument}</skip>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
