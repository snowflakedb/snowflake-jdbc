<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>net.snowflake</groupId>
    <artifactId>snowflake-jdbc-parent</artifactId>
    <version>3.15.2-SNAPSHOT</version>
    <relativePath>../parent-pom.xml</relativePath>
  </parent>

  <artifactId>snowflake-jdbc-fips</artifactId>
  <version>3.15.2-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>snowflake-jdbc-fips</name>
  <url>http://maven.apache.org</url>

  <repositories>
    <repository>
      <id>Central</id>
      <name>Internal Central Repo2</name>
      <layout>default</layout>
      <url>https://nexus.int.snowflakecomputing.com/repository/maven-central/</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <prerequisites>
    <maven>3.3.9</maven>
  </prerequisites>

  <!-- dummy scm connection required to get the buildnumber plugin working -->
  <scm>
    <connection>scm:svn:http://127.0.0.1/svn/dummy</connection>
    <developerConnection>scm:svn:https://127.0.0.1/svn/dummy</developerConnection>
    <tag>HEAD</tag>
    <url>http://127.0.0.1/websvn/dummy</url>
  </scm>

  <dependencies>
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bc-fips</artifactId>
    </dependency>
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcpkix-fips</artifactId>
    </dependency>
  </dependencies>

  <build>
    <finalName>${project.artifactId}</finalName>
    <sourceDirectory>${basedir}/../src/main/java</sourceDirectory>
    <testSourceDirectory>${basedir}/src/test/java</testSourceDirectory>
    <resources>
      <resource>
        <directory>${basedir}/../src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>${basedir}/../src/test/resources</directory>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <version>${version.plugin.install}</version>
        <executions>
          <execution>
            <id>install-tika-core</id>
            <phase>validate</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <file>${basedir}/../dependencies/tika-core-${tika.version}.jar</file>
              <groupId>org.apache.tika</groupId>
              <artifactId>tika-core</artifactId>
              <version>${tika.version}</version>
              <packaging>jar</packaging>
              <generatePom>true</generatePom>
            </configuration>
          </execution>
          <execution>
            <id>install-arrow-memory-pom</id>
            <phase>validate</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <file>${basedir}/../dependencies/arrow-memory-${arrow.version}.pom</file>
              <groupId>org.apache.arrow</groupId>
              <artifactId>arrow-memory</artifactId>
              <version>${arrow.version}</version>
              <packaging>pom</packaging>
              <generatePom>true</generatePom>
            </configuration>
          </execution>
          <execution>
            <id>install-arrow-memory-core</id>
            <phase>validate</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <file>${basedir}/../dependencies/arrow-memory-core-${arrow.version}.jar</file>
              <groupId>org.apache.arrow</groupId>
              <artifactId>arrow-memory-core</artifactId>
              <version>${arrow.version}</version>
              <packaging>jar</packaging>
              <generatePom>true</generatePom>
            </configuration>
          </execution>
          <execution>
            <id>install-arrow-memory-unsafe</id>
            <phase>validate</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <file>${basedir}/../dependencies/arrow-memory-unsafe-${arrow.version}.jar</file>
              <groupId>org.apache.arrow</groupId>
              <artifactId>arrow-memory-unsafe</artifactId>
              <version>${arrow.version}</version>
              <packaging>jar</packaging>
              <generatePom>true</generatePom>
            </configuration>
          </execution>
          <execution>
            <id>install-arrow-memory-netty</id>
            <phase>validate</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <file>${basedir}/../dependencies/arrow-memory-netty-${arrow.version}.jar</file>
              <groupId>org.apache.arrow</groupId>
              <artifactId>arrow-memory-netty</artifactId>
              <version>${arrow.version}</version>
              <packaging>jar</packaging>
              <generatePom>true</generatePom>
            </configuration>
          </execution>
          <execution>
            <id>install-arrow-format</id>
            <phase>validate</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <file>${basedir}/../dependencies/arrow-format-${arrow.version}.jar</file>
              <groupId>org.apache.arrow</groupId>
              <artifactId>arrow-format</artifactId>
              <version>${arrow.version}</version>
              <packaging>jar</packaging>
              <generatePom>true</generatePom>
            </configuration>
          </execution>
          <execution>
            <id>install-arrow-vector</id>
            <phase>validate</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <file>${basedir}/../dependencies/arrow-vector-${arrow.version}.jar</file>
              <groupId>org.apache.arrow</groupId>
              <artifactId>arrow-vector</artifactId>
              <version>${arrow.version}</version>
              <packaging>jar</packaging>
              <generatePom>true</generatePom>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>${version.plugin.clean}</version>
        <configuration>
          <excludeDefaultDirectories/>
          <filesets>
            <fileset>
              <directory>lib</directory>
                <includes>
                  <include>*.jar</include>
                </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${version.plugin.compiler}</version>
        <configuration>
          <showDeprecation>true</showDeprecation>
          <showWarnings>true</showWarnings>
          <executable>javac</executable>
          <fork>true</fork>
          <source>8</source>
          <target>8</target>
          <compilerArgs>
            <arg>-Xlint:all,-path</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${version.plugin.surefire}</version>
        <configuration>
          <excludes>
            <exclude>**/*SFTrustManagerTest.java</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${version.plugin.jacoco}</version>
        <executions>
          <execution>
            <id>pre-unit-test</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>target/jacoco-ut.exec</destFile>
            </configuration>
          </execution>
          <execution>
            <id>post-unit-test</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>target/jacoco-ut.exec</dataFile>
              <outputDirectory>target/jacoco-ut</outputDirectory>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <skip>${jacoco.skip.instrument}</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${version.plugin.jar}</version>
        <configuration>
          <archive>
            <manifest>
              <mainClass>net.snowflake.client.jdbc.SnowflakeDriver</mainClass>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
          </archive>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${version.plugin.dependency}</version>
        <executions>
          <execution>
            <id>install-jar</id>
            <phase>install</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>${project.artifactId}</artifactId>
                  <version>${project.version}</version>
                </artifactItem>
              </artifactItems>
              <outputDirectory>lib</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${version.plugin.source}</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${version.plugin.javadoc}</version>
        <configuration>
          <source>8</source>
        </configuration>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${version.plugin.exec}</version>
        <executions>
          <execution>
            <id>check-shaded-content</id>
            <phase>verify</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>${basedir}/scripts/check_content.sh</executable>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>${version.plugin.projectinforeports}</version>
      </plugin>
    </plugins>
  </reporting>

  <profiles>
    <profile>
      <id>self-contained-jar</id>
      <activation>
         <property>
          <name>!not-self-contained-jar</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>buildnumber-maven-plugin</artifactId>
            <version>${version.plugin.buildnumber}</version>
            <executions>
              <execution>
                 <phase>package</phase>
                 <goals>
                   <goal>create-timestamp</goal>
                 </goals>
              </execution>
           </executions>
           <configuration>
             <timestampFormat>yyyyMMddHHmmss</timestampFormat>
             <timestampPropertyName>buildNumber.timestamp</timestampPropertyName>
             <doCheck>false</doCheck>
             <revisionOnScmFailure/>
             <doUpdate>false</doUpdate>
             <!--- Note for those who come later.  If you specify "buildNumber" in the items field, it becomes an incrementing buildNumber
                AFAIK (and I spent a lot of time on this) it is impossible to get the SCM rev number and incrementing build number at the same time -->
           </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-shade-plugin</artifactId>
            <version>${version.plugin.shade}</version>
            <configuration>
            </configuration>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>shade</goal>
                </goals>
                <configuration>
                   <relocations>
                     <relocation>
                       <pattern>net.snowflake.common</pattern>
                       <shadedPattern>${shadeBase}.snowflake.common</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>org.apache</pattern>
                       <shadedPattern>${shadeBase}.apache</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>com.amazonaws</pattern>
                       <shadedPattern>${shadeBase}.amazonaws</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>software.amazon.ion</pattern>
                       <shadedPattern>${shadeBase}.software.amazon.ion</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>com.microsoft.azure</pattern>
                       <shadedPattern>${shadeBase}.microsoft.azure</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>com.fasterxml</pattern>
                       <shadedPattern>${shadeBase}.fasterxml</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>com.google</pattern>
                       <shadedPattern>${shadeBase}.google</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>google.geo</pattern>
                       <shadedPattern>${shadeBase}.google.geo</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>org.joda</pattern>
                       <shadedPattern>${shadeBase}.joda</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>com.yammer</pattern>
                       <shadedPattern>${shadeBase}.yammer</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>javax.servlet</pattern>
                       <shadedPattern>${shadeBase}.javax.servlet</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>org.jsoup</pattern>
                       <shadedPattern>${shadeBase}.org.jsoup</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>com.nimbusds</pattern>
                       <shadedPattern>${shadeBase}.com.nimbusds</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>javax.annotation</pattern>
                       <shadedPattern>${shadeBase}.javax.annotation</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>net.jcip</pattern>
                       <shadedPattern>${shadeBase}.net.jcip</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>net.minidev</pattern>
                       <shadedPattern>${shadeBase}.net.minidev</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>org.objectweb</pattern>
                       <shadedPattern>${shadeBase}.org.objectweb</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>com.sun</pattern>
                       <shadedPattern>${shadeBase}.com.sun</shadedPattern>
                       <excludes>
                         <exclude>com.sun.jna.**</exclude>
                       </excludes>
                     </relocation>
                     <relocation>
                       <pattern>io.netty</pattern>
                       <shadedPattern>${shadeBase}.io.netty</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>com.carrotsearch</pattern>
                       <shadedPattern>${shadeBase}.com.carrotsearch</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>google.type</pattern>
                       <shadedPattern>${shadeBase}.google.type</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>google.rpc</pattern>
                       <shadedPattern>${shadeBase}.google.rpc</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>google.iam</pattern>
                       <shadedPattern>${shadeBase}.google.iam</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>io.opencensus</pattern>
                       <shadedPattern>${shadeBase}.opencensus</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>org.threeten</pattern>
                       <shadedPattern>${shadeBase}.threeten</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>google.protobuf</pattern>
                       <shadedPattern>${shadeBase}.google.protobuf</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>google.api</pattern>
                       <shadedPattern>${shadeBase}.google.api</shadedPattern>
                     </relocation>
                     <relocation>
                     <pattern>google.storage</pattern>
                     <shadedPattern>${shadeBase}.google.storage</shadedPattern>
                   </relocation>
                     <relocation>
                       <pattern>io.grpc</pattern>
                       <shadedPattern>${shadeBase}.grpc</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>google.longrunning</pattern>
                       <shadedPattern>${shadeBase}.google.longrunning</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>google.cloud</pattern>
                       <shadedPattern>${shadeBase}.google.cloud</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>google.logging</pattern>
                       <shadedPattern>${shadeBase}.google.logging</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>org.checkerframework</pattern>
                       <shadedPattern>${shadeBase}.org.checkerframework</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>org.codehaus</pattern>
                       <shadedPattern>${shadeBase}.org.codehaus</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>io.perfmark</pattern>
                       <shadedPattern>${shadeBase}.io.perfmark</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>org.conscrypt</pattern>
                       <shadedPattern>${shadeBase}.org.conscrypt</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>opencensus</pattern>
                       <shadedPattern>${shadeBase}.opencensus</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>grpc</pattern>
                       <shadedPattern>${shadeBase}.grpc</shadedPattern>
                     </relocation>
                     <relocation>
                       <pattern>android.annotation</pattern>
                       <shadedPattern>${shadeBase}.android.annotation</shadedPattern>
                     </relocation>
                   </relocations>
                   <filters>
                      <filter>
                         <artifact>*:*</artifact>
                         <excludes>
                            <exclude>META-INF/LICENSE*</exclude>
                            <exclude>META-INF/NOTICE*</exclude>
                            <exclude>META-INF/DEPENDENCIES</exclude>
                            <exclude>META-INF/maven/**</exclude>
                            <exclude>META-INF/services/com.fasterxml.*</exclude>
                            <exclude>META-INF/versions/9/module-info.*</exclude>
                            <exclude>META-INF/*.xml</exclude>
                            <exclude>META-INF/*.SF</exclude>
                            <exclude>META-INF/*.DSA</exclude>
                            <exclude>META-INF/*.RSA</exclude>
                            <exclude>.netbeans_automatic_build</exclude>
                            <exclude>git.properties</exclude>
                            <exclude>arrow-git.properties</exclude>
                            <exclude>google-http-client.properties</exclude>
                            <exclude>pipes-fork-server-default-log4j2.xml</exclude>
                           <exclude>dependencies.properties</exclude>
                         </excludes>
                      </filter>
                      <filter>
                        <artifact>org.apache.arrow:arrow-vector</artifact>
                        <excludes>
                          <!-- codegen directory is used to generate java code for arrow vector package. Excludes them since we only need class file -->
                          <exclude>codegen/**</exclude>
                        </excludes>
                      </filter>
                      <filter>
                        <artifact>com.google.guava:guava</artifact>
                        <includes>
                          <include>com/google/common/io/**</include>
                          <include>com/google/common/base/**</include>
                          <include>com/google/common/hash/**</include>
                          <include>com/google/common/collect/**</include>
                          <include>com/google/common/graph/**</include>
                          <include>com/google/common/math/**</include>
                          <include>com/google/common/util/concurrent/**</include>
                        </includes>
                      </filter>
                      <filter>
                        <artifact>commons-logging:commons-logging</artifact>
                        <excludes>
                          <exclude>org/apache/commons/logging/impl/AvalonLogger.class</exclude>
                        </excludes>
                      </filter>
                   </filters>
                  <transformers>
                    <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                    <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                    </transformer>
                  </transformers>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <!-- relocate the META-INF/versions files manually due to the maven bug -->
            <!-- https://issues.apache.org/jira/browse/MSHADE-406 -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>repack</id>
                <goals>
                  <goal>run</goal>
                </goals>
                <phase>package</phase>
                <configuration>
                  <target>
                    <unzip dest="${project.build.directory}/relocate" src="${project.build.directory}/${project.build.finalName}.jar"/>
                    <mkdir dir="${project.build.directory}/relocate/META-INF/versions/11/${relocationBase}"/>
                    <mkdir dir="${project.build.directory}/relocate/META-INF/versions/17/${relocationBase}"/>
                    <mkdir dir="${project.build.directory}/relocate/META-INF/versions/19/${relocationBase}"/>
                    <!-- com.fasterxml.* packages are relocated to ${relocationBase}.fasterxml.* -->
                    <move file="${project.build.directory}/relocate/META-INF/versions/11/com/fasterxml" todir="${project.build.directory}/relocate/META-INF/versions/11/${relocationBase}"/>
                    <move file="${project.build.directory}/relocate/META-INF/versions/17/com/fasterxml" todir="${project.build.directory}/relocate/META-INF/versions/17/${relocationBase}"/>
                    <move file="${project.build.directory}/relocate/META-INF/versions/19/com/fasterxml" todir="${project.build.directory}/relocate/META-INF/versions/19/${relocationBase}"/>
                    <zip basedir="${project.build.directory}/relocate" destfile="${project.build.directory}/${project.build.finalName}.jar"/>
                    <delete dir="${project.build.directory}/relocate/META-INF/versions/11/${relocationBase}"/>
                    <delete dir="${project.build.directory}/relocate/META-INF/versions/17/${relocationBase}"/>
                    <delete dir="${project.build.directory}/relocate/META-INF/versions/19/${relocationBase}"/>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- Run mvn -P check-style verify -->
    <profile>
      <id>check-style</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.coveo</groupId>
            <artifactId>fmt-maven-plugin</artifactId>
            <version>${version.plugin.fmt}</version>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>java-9</id>
      <activation>
        <jdk>(9,)</jdk>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${version.plugin.failsafe}</version>
            <configuration>
              <argLine>
                --add-opens=java.base/java.io=ALL-UNNAMED
                --add-opens=java.base/java.nio=ALL-UNNAMED
                --add-opens=java.base/java.lang=ALL-UNNAMED
                --add-opens=java.base/java.lang.reflect=ALL-UNNAMED
                --add-opens=java.base/java.util=ALL-UNNAMED
                --add-exports=java.base/sun.nio.ch=ALL-UNNAMED
                --add-exports=java.base/sun.security.internal.spec=ALL-UNNAMED
                --add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED
              </argLine>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <argLine>
                --add-opens=java.base/java.io=ALL-UNNAMED
                --add-opens=java.base/java.nio=ALL-UNNAMED
                --add-opens=java.base/java.lang=ALL-UNNAMED
                --add-opens=java.base/java.lang.reflect=ALL-UNNAMED
                --add-opens=java.base/java.util=ALL-UNNAMED
                --add-exports=java.base/sun.nio.ch=ALL-UNNAMED
                --add-exports=java.base/sun.security.internal.spec=ALL-UNNAMED
                --add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED
              </argLine>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>jenkinsIT</id>
      <activation>
        <property>
          <name>jenkinsIT</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${version.plugin.failsafe}</version>
            <executions>
              <execution>
                <id>DefaultIT</id>
                <goals>
                  <goal>integration-test</goal>
                </goals>
                <configuration>
                  <includes>
                    <include>**/ConnectionFipsIT.java</include>
                  </includes>
                  <systemPropertyVariables>
                    <net.snowflake.jdbc.loggerImpl>
                      net.snowflake.client.log.JDK14Logger
                    </net.snowflake.jdbc.loggerImpl>
                    <java.util.logging.config.file>
                      ${basedir}/../src/test/resources/logging.properties
                    </java.util.logging.config.file>
                  </systemPropertyVariables>
                </configuration>
              </execution>
              <execution>
                <goals>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- profiles deployed into ossrh stage area -->
    <profile>
      <id>ossrh-deploy</id>
      <activation>
        <property>
          <name>ossrhDeploy</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>${version.plugin.gpg}</version>
            <executions>
              <execution>
                <phase>deploy</phase>
                <goals>
                  <goal>sign-and-deploy-file</goal>
                </goals>
                <configuration>
                  <file>target/${project.artifactId}.jar</file>
                  <repositoryId>ossrh</repositoryId>
                  <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
                  <pomFile>generated_public_pom.xml</pomFile>
                  <javadoc>target/${project.artifactId}-javadoc.jar</javadoc>
                  <sources>target/${project.artifactId}-sources.jar</sources>
                  <keyname>${env.GPG_KEY_ID}</keyname>
                  <passphrase>${env.GPG_KEY_PASSPHRASE}</passphrase>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- skip default deploy plugin if we use gpg plugin to deploy -->
          <plugin>
            <artifactId>maven-deploy-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
